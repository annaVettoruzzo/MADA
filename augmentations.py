from tsaug import AddNoise, Convolve, Drift, Pool, Quantize, Reverse, TimeWarp
from utils import DEVICE
import numpy as np
import torch


transformations = [
    AddNoise(scale=(0.00001, 0.0001)),
    AddNoise(scale=(0.0001, 0.001)),
    AddNoise(scale=(0.001, 0.01)),
    AddNoise(scale=(0.01, 0.1)),
    AddNoise(scale=(0.1, 0.2)),
    AddNoise(scale=(0.2, 0.5)),
    AddNoise(scale=(0.5, 0.7)),
    AddNoise(scale=(0.7, 1.0)),
    AddNoise(scale=(1.0, 2.0)),
    AddNoise(scale=(2.0, 3.0)),
    AddNoise(scale=(3.0, 4.0)),
    AddNoise(scale=(4.0, 5.0)),
    AddNoise(scale=(5.0, 6.0)),
    AddNoise(scale=(6.0, 7.0)),
    AddNoise(scale=(7.0, 8.0)),
    AddNoise(scale=(8.0, 9.0)),
    AddNoise(scale=(9.0, 10.0)),

    Convolve(window=["hann", "triang", "hamming", "cosine"], size=(1, 3)),
    Convolve(window=["hann", "triang", "hamming", "cosine"], size=(3, 5)),
    Convolve(window=["hann", "triang", "hamming", "cosine"], size=(5, 7)),
    Convolve(window=["hann", "triang", "hamming", "cosine"], size=(7, 10)),
    Convolve(window=["hann", "triang", "hamming", "cosine"], size=(10, 15)),
    Convolve(window=["hann", "triang", "hamming", "cosine"], size=(15, 20)),
    Convolve(window=["hann", "triang", "hamming", "cosine"], size=(20, 25)),
    Convolve(window=["hann", "triang", "hamming", "cosine"], size=(25, 30)),
    Convolve(window=["hann", "triang", "hamming", "cosine"], size=(30, 35)),

    Drift(max_drift=(0.00001, 0.0001), n_drift_points=[2, 3, 4]),
    Drift(max_drift=(0.0001, 0.001), n_drift_points=[2, 3, 4]),
    Drift(max_drift=(0.3, 0.5), n_drift_points=[2, 3, 4]),
    Drift(max_drift=(0.001, 0.01), n_drift_points=[2, 3, 4]),
    Drift(max_drift=(0.1, 0.2), n_drift_points=[2, 3, 4]),
    Drift(max_drift=(0.2, 0.5), n_drift_points=[2, 3, 4]),
    Drift(max_drift=(0.5, 0.7), n_drift_points=[2, 3, 4]),
    Drift(max_drift=(0.7, 1.0), n_drift_points=[2, 3, 4]),
    Drift(max_drift=(1.0, 2.0), n_drift_points=[2, 3, 4]),
    Drift(max_drift=(2.0, 3.0), n_drift_points=[2, 3, 4]),
    Drift(max_drift=(3.0, 5.0), n_drift_points=[2, 3, 4]),
    Drift(max_drift=(5.0, 7.0), n_drift_points=[2, 3, 4]),
    Drift(max_drift=(7.0, 9.0), n_drift_points=[2, 3, 4]),
    Drift(max_drift=(9.0, 10.0), n_drift_points=[2, 3, 4]),

    Drift(max_drift=(0.00001, 0.0001), n_drift_points=[5, 6, 7, 8, 9]),
    Drift(max_drift=(0.0001, 0.001), n_drift_points=[5, 6, 7, 8, 9]),
    Drift(max_drift=(0.3, 0.5), n_drift_points=[5, 6, 7, 8, 9]),
    Drift(max_drift=(0.001, 0.01), n_drift_points=[5, 6, 7, 8, 9]),
    Drift(max_drift=(0.1, 0.2), n_drift_points=[5, 6, 7, 8, 9]),
    Drift(max_drift=(0.2, 0.5), n_drift_points=[5, 6, 7, 8, 9]),
    Drift(max_drift=(0.5, 0.7), n_drift_points=[5, 6, 7, 8, 9]),
    Drift(max_drift=(0.7, 1.0), n_drift_points=[5, 6, 7, 8, 9]),
    Drift(max_drift=(1.0, 2.0), n_drift_points=[5, 6, 7, 8, 9]),
    Drift(max_drift=(2.0, 3.0), n_drift_points=[5, 6, 7, 8, 9]),
    Drift(max_drift=(3.0, 5.0), n_drift_points=[5, 6, 7, 8, 9]),
    Drift(max_drift=(5.0, 7.0), n_drift_points=[5, 6, 7, 8, 9]),
    Drift(max_drift=(7.0, 9.0), n_drift_points=[5, 6, 7, 8, 9]),
    Drift(max_drift=(9.0, 10.0), n_drift_points=[5, 6, 7, 8, 9]),

    Drift(max_drift=(0.00001, 0.0001), n_drift_points=[10, 12, 15, 18, 20]),
    Drift(max_drift=(0.0001, 0.001), n_drift_points=[10, 12, 15, 18, 20]),
    Drift(max_drift=(0.3, 0.5), n_drift_points=[10, 12, 15, 18, 20]),
    Drift(max_drift=(0.001, 0.01), n_drift_points=[10, 12, 15, 18, 20]),
    Drift(max_drift=(0.1, 0.2), n_drift_points=[10, 12, 15, 18, 20]),
    Drift(max_drift=(0.2, 0.5), n_drift_points=[10, 12, 15, 18, 20]),
    Drift(max_drift=(0.5, 0.7), n_drift_points=[10, 12, 15, 18, 20]),
    Drift(max_drift=(0.7, 1.0), n_drift_points=[10, 12, 15, 18, 20]),
    Drift(max_drift=(1.0, 2.0), n_drift_points=[10, 12, 15, 18, 20]),
    Drift(max_drift=(2.0, 3.0), n_drift_points=[10, 12, 15, 18, 20]),
    Drift(max_drift=(3.0, 5.0), n_drift_points=[10, 12, 15, 18, 20]),
    Drift(max_drift=(5.0, 7.0), n_drift_points=[10, 12, 15, 18, 20]),
    Drift(max_drift=(7.0, 9.0), n_drift_points=[10, 12, 15, 18, 20]),
    Drift(max_drift=(9.0, 10.0), n_drift_points=[10, 12, 15, 18, 20]),

    Pool(size=(3, 5), per_channel=False),
    Pool(size=(5, 7), per_channel=False),
    Pool(size=(7, 10), per_channel=False),
    Pool(size=(10, 15), per_channel=False),
    Pool(size=(15, 20), per_channel=False),

    Pool(size=(3, 5), per_channel=True),
    Pool(size=(5, 7), per_channel=True),
    Pool(size=(7, 10), per_channel=True),
    Pool(size=(10, 15), per_channel=True),
    Pool(size=(15, 20), per_channel=True),

    Quantize(n_levels=(3, 5), per_channel=False),
    Quantize(n_levels=(5, 7), per_channel=False),
    Quantize(n_levels=(7, 10), per_channel=False),
    Quantize(n_levels=(10, 15), per_channel=False),
    Quantize(n_levels=(15, 20), per_channel=False),
    Quantize(n_levels=(20, 25), per_channel=False),
    Quantize(n_levels=(25, 30), per_channel=False),
    Quantize(n_levels=(30, 35), per_channel=False),
    Quantize(n_levels=(35, 40), per_channel=False),

    Quantize(n_levels=(3, 5), per_channel=True),
    Quantize(n_levels=(5, 7), per_channel=True),
    Quantize(n_levels=(7, 10), per_channel=True),
    Quantize(n_levels=(10, 15), per_channel=True),
    Quantize(n_levels=(15, 20), per_channel=True),
    Quantize(n_levels=(20, 25), per_channel=True),
    Quantize(n_levels=(25, 30), per_channel=True),
    Quantize(n_levels=(30, 35), per_channel=True),
    Quantize(n_levels=(35, 40), per_channel=True),

    TimeWarp(n_speed_change=1, max_speed_ratio=(2., 5.)),
    TimeWarp(n_speed_change=5, max_speed_ratio=(2., 5.)),
    TimeWarp(n_speed_change=10, max_speed_ratio=(2., 5.)),
    TimeWarp(n_speed_change=15, max_speed_ratio=(2., 5.)),
    TimeWarp(n_speed_change=20, max_speed_ratio=(2., 5.)),
    TimeWarp(n_speed_change=30, max_speed_ratio=(2., 5.)),
    TimeWarp(n_speed_change=40, max_speed_ratio=(2., 5.)),
    TimeWarp(n_speed_change=1, max_speed_ratio=(5., 10.)),
    TimeWarp(n_speed_change=5, max_speed_ratio=(5., 10.)),
    TimeWarp(n_speed_change=10, max_speed_ratio=(5., 10.)),
    TimeWarp(n_speed_change=15, max_speed_ratio=(5., 10.)),
    TimeWarp(n_speed_change=20, max_speed_ratio=(5., 10.)),
    TimeWarp(n_speed_change=30, max_speed_ratio=(5., 10.)),
    TimeWarp(n_speed_change=40, max_speed_ratio=(5., 10.)),
    TimeWarp(n_speed_change=1, max_speed_ratio=(10., 15.)),
    TimeWarp(n_speed_change=5, max_speed_ratio=(10., 15.)),
    TimeWarp(n_speed_change=10, max_speed_ratio=(10., 15.)),
    TimeWarp(n_speed_change=15, max_speed_ratio=(10., 15.)),
    TimeWarp(n_speed_change=20, max_speed_ratio=(10., 15.)),
    TimeWarp(n_speed_change=30, max_speed_ratio=(10., 15.)),
    TimeWarp(n_speed_change=40, max_speed_ratio=(10., 15.)),
    TimeWarp(n_speed_change=1, max_speed_ratio=(15., 20.)),
    TimeWarp(n_speed_change=5, max_speed_ratio=(15., 20.)),
    TimeWarp(n_speed_change=10, max_speed_ratio=(15., 20.)),
    TimeWarp(n_speed_change=15, max_speed_ratio=(15., 20.)),
    TimeWarp(n_speed_change=20, max_speed_ratio=(15., 20.)),
    TimeWarp(n_speed_change=30, max_speed_ratio=(15., 20.)),
    TimeWarp(n_speed_change=40, max_speed_ratio=(15., 20.)),
    TimeWarp(n_speed_change=1, max_speed_ratio=(20., 30.)),
    TimeWarp(n_speed_change=5, max_speed_ratio=(20., 30.)),
    TimeWarp(n_speed_change=10, max_speed_ratio=(20., 30.)),
    TimeWarp(n_speed_change=15, max_speed_ratio=(20., 30.)),
    TimeWarp(n_speed_change=20, max_speed_ratio=(20., 30.)),
    TimeWarp(n_speed_change=30, max_speed_ratio=(20., 30.)),
    TimeWarp(n_speed_change=40, max_speed_ratio=(20., 30.)),
    TimeWarp(n_speed_change=1, max_speed_ratio=(30., 40.)),
    TimeWarp(n_speed_change=5, max_speed_ratio=(30., 40.)),
    TimeWarp(n_speed_change=10, max_speed_ratio=(30., 40.)),
    TimeWarp(n_speed_change=15, max_speed_ratio=(30., 40.)),
    TimeWarp(n_speed_change=20, max_speed_ratio=(30., 40.)),
    TimeWarp(n_speed_change=30, max_speed_ratio=(30., 40.)),
    TimeWarp(n_speed_change=40, max_speed_ratio=(30., 40.)),

    (Reverse() + AddNoise(0.00001, 0.0001)),
    (Reverse() + AddNoise(0.0001, 0.001)),
    (Reverse() + AddNoise(0.001, 0.01)),
    (Reverse() + AddNoise(0.01, 0.1)),
    (Reverse() + AddNoise(0.1, 0.2)),
    (Reverse() + AddNoise(0.2, 0.5)),
    (Reverse() + AddNoise(0.5, 0.7)),
    (Reverse() + AddNoise(0.7, 1.0)),
    (Reverse() + AddNoise(1.0, 2.0)),
    (Reverse() + AddNoise(2.0, 3.0)),
    (Reverse() + AddNoise(3.0, 4.0)),
    (Reverse() + AddNoise(4.0, 5.0)),
    (Reverse() + AddNoise(5.0, 6.0)),
    (Reverse() + AddNoise(6.0, 7.0)),
    (Reverse() + AddNoise(7.0, 8.0)),
    (Reverse() + AddNoise(8.0, 9.0)),
    (Reverse() + AddNoise(9.0, 10.0)),
]


transformations_old = [
    # Identity ...,
    Reverse(),

    #AddNoise(scale=(0.00001, 0.0001)),
    #AddNoise(scale=(0.0001, 0.001)),
    #AddNoise(scale=(0.001, 0.01)),
    #AddNoise(scale=(0.01, 0.1)),
    AddNoise(scale=(0.001, 0.1)),
    AddNoise(scale=(0.1, 0.3)),
    AddNoise(scale=(0.3, 0.5)),
    AddNoise(scale=(0.5, 0.7)),
    AddNoise(scale=(0.7, 1.0)),
    AddNoise(scale=(1.0, 3.0)),
    AddNoise(scale=(3.0, 5.0)),
    AddNoise(scale=(5.0, 7.0)),
    AddNoise(scale=(7.0, 10.0)),
    AddNoise(scale=(10.0, 15.0)),
    AddNoise(scale=(15.0, 20.0)),
    AddNoise(scale=(20.0, 25.0)),
    AddNoise(scale=(25.0, 30.0)),
    AddNoise(scale=(30.0, 35.0)),
    AddNoise(scale=(35.0, 40.0)),
    #AddNoise(scale=(40.0, 45.0)),
    #AddNoise(scale=(45.0, 50.0)),
    #AddNoise(scale=(50.0, 55.0)),
    #AddNoise(scale=(55.0, 60.0)),
    #AddNoise(scale=(60.0, 65.0)),
    #AddNoise(scale=(65.0, 70.0)),
    #AddNoise(scale=(70.0, 75.0)),
    #AddNoise(scale=(75.0, 80.0)),
    #AddNoise(scale=(80.0, 85.0)),
    #AddNoise(scale=(85.0, 90.0)),
    #AddNoise(scale=(90.0, 110.0)),
    #AddNoise(scale=(110.0, 150.0)),
    #AddNoise(scale=(150.0, 200.0)),
    #AddNoise(scale=(200.0, 250.0)),
    #AddNoise(scale=(250.0, 300.0)),
    #AddNoise(scale=(300.0, 350.0)),
    #AddNoise(scale=(350.0, 400.0)),
    #AddNoise(scale=(400.0, 450.0)),
    #AddNoise(scale=(450.0, 500.0)),

    Convolve(window=["hann", "triang", "hamming", "cosine"], size=(3, 5)),
    Convolve(window=["hann", "triang", "hamming", "cosine"], size=(5, 7)),
    Convolve(window=["hann", "triang", "hamming", "cosine"], size=(7, 10)),
    Convolve(window=["hann", "triang", "hamming", "cosine"], size=(10, 15)),
    Convolve(window=["hann", "triang", "hamming", "cosine"], size=(15, 20)),
    Convolve(window=["hann", "triang", "hamming", "cosine"], size=(20, 25)),
    Convolve(window=["hann", "triang", "hamming", "cosine"], size=(25, 30)),
    Convolve(window=["hann", "triang", "hamming", "cosine"], size=(30, 35)),
    Convolve(window=["hann", "triang", "hamming", "cosine"], size=(35, 40)),

    Drift(max_drift=(0.001, 0.1), n_drift_points=[2, 3, 4]),
    Drift(max_drift=(0.1, 0.3), n_drift_points=[2, 3, 4]),
    Drift(max_drift=(0.3, 0.5), n_drift_points=[2, 3, 4]),
    Drift(max_drift=(0.5, 0.7), n_drift_points=[2, 3, 4]),
    Drift(max_drift=(0.7, 1.0), n_drift_points=[2, 3, 4]),
    Drift(max_drift=(1.0, 3.0), n_drift_points=[2, 3, 4]),
    Drift(max_drift=(3.0, 5.0), n_drift_points=[2, 3, 4]),
    Drift(max_drift=(5.0, 7.0), n_drift_points=[2, 3, 4]),
    Drift(max_drift=(7.0, 10.0), n_drift_points=[2, 3, 4]),
    Drift(max_drift=(10.0, 15.0), n_drift_points=[2, 3, 4]),
    Drift(max_drift=(15.0, 20.0), n_drift_points=[2, 3, 4]),
    Drift(max_drift=(20.0, 25.0), n_drift_points=[2, 3, 4]),
    Drift(max_drift=(25.0, 30.0), n_drift_points=[2, 3, 4]),
    Drift(max_drift=(30.0, 35.0), n_drift_points=[2, 3, 4]),
    Drift(max_drift=(35.0, 40.0), n_drift_points=[2, 3, 4]),

    Drift(max_drift=(0.001, 0.1), n_drift_points=[5, 6, 7, 8, 9]),
    Drift(max_drift=(0.1, 0.3), n_drift_points=[5, 6, 7, 8, 9]),
    Drift(max_drift=(0.3, 0.5), n_drift_points=[5, 6, 7, 8, 9]),
    Drift(max_drift=(0.5, 0.7), n_drift_points=[5, 6, 7, 8, 9]),
    Drift(max_drift=(0.7, 1.0), n_drift_points=[5, 6, 7, 8, 9]),
    Drift(max_drift=(1.0, 3.0), n_drift_points=[5, 6, 7, 8, 9]),
    Drift(max_drift=(3.0, 5.0), n_drift_points=[5, 6, 7, 8, 9]),
    Drift(max_drift=(5.0, 7.0), n_drift_points=[5, 6, 7, 8, 9]),
    Drift(max_drift=(7.0, 10.0), n_drift_points=[5, 6, 7, 8, 9]),
    Drift(max_drift=(10.0, 15.0), n_drift_points=[5, 6, 7, 8, 9]),
    Drift(max_drift=(15.0, 20.0), n_drift_points=[5, 6, 7, 8, 9]),
    Drift(max_drift=(20.0, 25.0), n_drift_points=[5, 6, 7, 8, 9]),
    Drift(max_drift=(25.0, 30.0), n_drift_points=[5, 6, 7, 8, 9]),
    Drift(max_drift=(30.0, 35.0), n_drift_points=[5, 6, 7, 8, 9]),
    Drift(max_drift=(35.0, 40.0), n_drift_points=[5, 6, 7, 8, 9]),

    Drift(max_drift=(0.001, 0.1), n_drift_points=[10, 12, 15, 18, 20]),
    Drift(max_drift=(0.1, 0.3), n_drift_points=[10, 12, 15, 18, 20]),
    Drift(max_drift=(0.3, 0.5), n_drift_points=[10, 12, 15, 18, 20]),
    Drift(max_drift=(0.5, 0.7), n_drift_points=[10, 12, 15, 18, 20]),
    Drift(max_drift=(0.7, 1.0), n_drift_points=[10, 12, 15, 18, 20]),
    Drift(max_drift=(1.0, 3.0), n_drift_points=[10, 12, 15, 18, 20]),
    Drift(max_drift=(3.0, 5.0), n_drift_points=[10, 12, 15, 18, 20]),
    Drift(max_drift=(5.0, 7.0), n_drift_points=[10, 12, 15, 18, 20]),
    Drift(max_drift=(7.0, 10.0), n_drift_points=[10, 12, 15, 18, 20]),
    Drift(max_drift=(10.0, 15.0), n_drift_points=[10, 12, 15, 18, 20]),
    Drift(max_drift=(15.0, 20.0), n_drift_points=[10, 12, 15, 18, 20]),
    Drift(max_drift=(20.0, 25.0), n_drift_points=[10, 12, 15, 18, 20]),
    Drift(max_drift=(25.0, 30.0), n_drift_points=[10, 12, 15, 18, 20]),
    Drift(max_drift=(30.0, 35.0), n_drift_points=[10, 12, 15, 18, 20]),
    Drift(max_drift=(35.0, 40.0), n_drift_points=[10, 12, 15, 18, 20]),

    Pool(size=(3, 5), per_channel=False),
    Pool(size=(5, 7), per_channel=False),
    Pool(size=(7, 10), per_channel=False),
    Pool(size=(10, 15), per_channel=False),
    Pool(size=(15, 20), per_channel=False),

    Pool(size=(3, 5), per_channel=True),
    Pool(size=(5, 7), per_channel=True),
    Pool(size=(7, 10), per_channel=True),
    Pool(size=(10, 15), per_channel=True),
    Pool(size=(15, 20), per_channel=True),

    Quantize(n_levels=(3, 5), per_channel=False),
    Quantize(n_levels=(5, 7), per_channel=False),
    Quantize(n_levels=(7, 10), per_channel=False),
    Quantize(n_levels=(10, 15), per_channel=False),
    Quantize(n_levels=(15, 20), per_channel=False),
    Quantize(n_levels=(20, 25), per_channel=False),
    Quantize(n_levels=(25, 30), per_channel=False),
    Quantize(n_levels=(30, 35), per_channel=False),
    Quantize(n_levels=(35, 40), per_channel=False),

    Quantize(n_levels=(3, 5), per_channel=True),
    Quantize(n_levels=(5, 7), per_channel=True),
    Quantize(n_levels=(7, 10), per_channel=True),
    Quantize(n_levels=(10, 15), per_channel=True),
    Quantize(n_levels=(15, 20), per_channel=True),
    Quantize(n_levels=(20, 25), per_channel=True),
    Quantize(n_levels=(25, 30), per_channel=True),
    Quantize(n_levels=(30, 35), per_channel=True),
    Quantize(n_levels=(35, 40), per_channel=True),

    TimeWarp(n_speed_change=1, max_speed_ratio=(2., 5.)),
    TimeWarp(n_speed_change=5, max_speed_ratio=(2., 5.)),
    TimeWarp(n_speed_change=10, max_speed_ratio=(2., 5.)),
    TimeWarp(n_speed_change=15, max_speed_ratio=(2., 5.)),
    TimeWarp(n_speed_change=20, max_speed_ratio=(2., 5.)),
    TimeWarp(n_speed_change=30, max_speed_ratio=(2., 5.)),
    TimeWarp(n_speed_change=40, max_speed_ratio=(2., 5.)),
    TimeWarp(n_speed_change=1, max_speed_ratio=(5., 10.)),
    TimeWarp(n_speed_change=5, max_speed_ratio=(5., 10.)),
    TimeWarp(n_speed_change=10, max_speed_ratio=(5., 10.)),
    TimeWarp(n_speed_change=15, max_speed_ratio=(5., 10.)),
    TimeWarp(n_speed_change=20, max_speed_ratio=(5., 10.)),
    TimeWarp(n_speed_change=30, max_speed_ratio=(5., 10.)),
    TimeWarp(n_speed_change=40, max_speed_ratio=(5., 10.)),
    TimeWarp(n_speed_change=1, max_speed_ratio=(10., 15.)),
    TimeWarp(n_speed_change=5, max_speed_ratio=(10., 15.)),
    TimeWarp(n_speed_change=10, max_speed_ratio=(10., 15.)),
    TimeWarp(n_speed_change=15, max_speed_ratio=(10., 15.)),
    TimeWarp(n_speed_change=20, max_speed_ratio=(10., 15.)),
    TimeWarp(n_speed_change=30, max_speed_ratio=(10., 15.)),
    TimeWarp(n_speed_change=40, max_speed_ratio=(10., 15.)),
    TimeWarp(n_speed_change=1, max_speed_ratio=(15., 20.)),
    TimeWarp(n_speed_change=5, max_speed_ratio=(15., 20.)),
    TimeWarp(n_speed_change=10, max_speed_ratio=(15., 20.)),
    TimeWarp(n_speed_change=15, max_speed_ratio=(15., 20.)),
    TimeWarp(n_speed_change=20, max_speed_ratio=(15., 20.)),
    TimeWarp(n_speed_change=30, max_speed_ratio=(15., 20.)),
    TimeWarp(n_speed_change=40, max_speed_ratio=(15., 20.)),
    TimeWarp(n_speed_change=1, max_speed_ratio=(20., 30.)),
    TimeWarp(n_speed_change=5, max_speed_ratio=(20., 30.)),
    TimeWarp(n_speed_change=10, max_speed_ratio=(20., 30.)),
    TimeWarp(n_speed_change=15, max_speed_ratio=(20., 30.)),
    TimeWarp(n_speed_change=20, max_speed_ratio=(20., 30.)),
    TimeWarp(n_speed_change=30, max_speed_ratio=(20., 30.)),
    TimeWarp(n_speed_change=40, max_speed_ratio=(20., 30.)),
    TimeWarp(n_speed_change=1, max_speed_ratio=(30., 40.)),
    TimeWarp(n_speed_change=5, max_speed_ratio=(30., 40.)),
    TimeWarp(n_speed_change=10, max_speed_ratio=(30., 40.)),
    TimeWarp(n_speed_change=15, max_speed_ratio=(30., 40.)),
    TimeWarp(n_speed_change=20, max_speed_ratio=(30., 40.)),
    TimeWarp(n_speed_change=30, max_speed_ratio=(30., 40.)),
    TimeWarp(n_speed_change=40, max_speed_ratio=(30., 40.)),

    (Reverse() + AddNoise(0.001, 0.1)),
    (Reverse() + AddNoise(0.1, 0.3)),
    (Reverse() + AddNoise(0.3, 0.5)),
    (Reverse() + AddNoise(0.5, 0.7)),
    (Reverse() + AddNoise(0.7, 1.0)),
    (Reverse() + AddNoise(1.0, 3.0)),
    (Reverse() + AddNoise(3.0, 5.0)),
    (Reverse() + AddNoise(5.0, 7.0)),
    (Reverse() + AddNoise(7.0, 10.0)),
    (Reverse() + AddNoise(10.0, 15.0)),
    (Reverse() + AddNoise(15.0, 20.0)),
    (Reverse() + AddNoise(20.0, 25.0)),
    (Reverse() + AddNoise(25.0, 30.0)),
    (Reverse() + AddNoise(30.0, 35.0)),
    (Reverse() + AddNoise(35.0, 40.0)),
]


transformations_addgranularity = [
    # Identity ...,

    AddNoise(scale=(0.00001, 0.00003)),
    AddNoise(scale=(0.00003, 0.00006)),
    AddNoise(scale=(0.00006, 0.0001)),
    AddNoise(scale=(0.0001, 0.0003)),
    AddNoise(scale=(0.0003, 0.0006)),
    AddNoise(scale=(0.0006, 0.001)),
    AddNoise(scale=(0.001, 0.003)),
    AddNoise(scale=(0.003, 0.006)),
    AddNoise(scale=(0.006, 0.01)),
    AddNoise(scale=(0.01, 0.03)),
    AddNoise(scale=(0.03, 0.06)),
    AddNoise(scale=(0.06, 0.1)),
    AddNoise(scale=(0.1, 0.3)),
    AddNoise(scale=(0.3, 0.6)),
    AddNoise(scale=(0.6, 1.0)),
    AddNoise(scale=(1.0, 1.3)),
    AddNoise(scale=(1.3, 1.6)),
    AddNoise(scale=(1.6, 2.0)),
    AddNoise(scale=(2.0, 2.3)),
    AddNoise(scale=(2.3, 2.6)),
    AddNoise(scale=(2.6, 3.0)),
]


NB_AUGS = len(transformations)


# -------------------------------------------------------------------
def augs(X):
    # tsaug requires the number of channels to be the last dimension
    X = X.swapaxes(-1, -2).cpu().numpy()

    XX = np.array([tr.augment(X) for tr in transformations])

    # swap the last two dimensions back to the original order
    XX = torch.from_numpy(XX).swapaxes(-1, -2).to(DEVICE).float()
    return XX

